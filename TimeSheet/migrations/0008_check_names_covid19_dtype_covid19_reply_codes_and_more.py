# Generated by Django 4.0.8 on 2022-12-02 21:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('TimeSheet', '0007_enterprise_revision_changes_persons_extended_info'),
    ]

    operations = [
        migrations.CreateModel(
            name='Check_names',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_column='name', max_length=256)),
                ('belong_to', models.CharField(db_column='belong_to', max_length=16)),
                ('finished', models.IntegerField(db_column='finished')),
                ('result', models.IntegerField(db_column='result')),
            ],
            options={
                'db_table': 'check_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='covid19_dtype',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('descr', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'covid19_dtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='covid19_reply_codes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('descr', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'covid19_reply_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='covid19_vtype',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('descr', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'covid19_vtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImageCoworks',
            fields=[
                ('guid', models.CharField(db_column='guid', default='62fa97b1-a17b-4069-aa9f-54ce17e6fc38', max_length=64, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='image_cowork/%Y%m/')),
                ('deleted_cowork', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'image_coworks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mtv_cashier',
            fields=[
                ('year', models.IntegerField(db_column='y')),
                ('month', models.IntegerField(db_column='m')),
                ('enterprise_guid', models.ForeignKey(db_column='enterprise_guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='TimeSheet.enterprises')),
                ('checks_count', models.IntegerField(db_column='checks_count')),
                ('speed_avg', models.FloatField(db_column='speed_avg')),
                ('p_amt', models.IntegerField(db_column='p_amt')),
                ('f_amt', models.IntegerField(db_column='f_amt')),
                ('efficiency', models.FloatField(db_column='efficiency')),
                ('checks_avg', models.FloatField(db_column='checks_avg')),
                ('prize', models.FloatField(db_column='prize')),
                ('prize_view', models.FloatField(db_column='prize_view')),
                ('ml', models.IntegerField(db_column='ml')),
                ('mc', models.IntegerField(db_column='mc')),
            ],
            options={
                'db_table': 'mtv_cashier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mtv_header',
            fields=[
                ('year', models.IntegerField(db_column='y')),
                ('month', models.IntegerField(db_column='m')),
                ('enterprise_guid', models.ForeignKey(db_column='enterprise_guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='TimeSheet.enterprises')),
                ('p_amt', models.IntegerField(db_column='p_amt')),
                ('f_amt', models.IntegerField(db_column='f_amt')),
                ('prize', models.FloatField(db_column='prize')),
                ('speed_avg', models.FloatField(db_column='speed_avg')),
                ('ml', models.IntegerField(db_column='ml')),
                ('prize_view', models.FloatField(db_column='prize_view')),
                ('mc', models.IntegerField(db_column='mc')),
            ],
            options={
                'db_table': 'mtv_header',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='persons_covid19',
            fields=[
                ('uid', models.CharField(editable=False, max_length=64, primary_key=True, serialize=False, unique=True)),
                ('dts', models.DateField(db_column='dts')),
                ('vaccination_type', models.IntegerField()),
                ('vaccination_declined', models.IntegerField()),
                ('having_qr_code', models.IntegerField(db_column='having_qr_code')),
                ('reply_code', models.IntegerField(db_column='reply_code')),
                ('last_week_checkin', models.IntegerField(db_column='last_week_checkin')),
            ],
            options={
                'db_table': 'persons_covid19',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='persons_coworks_history',
            fields=[
                ('guid', models.CharField(db_column='guid', default='2f8ec988-8dc3-402d-a7ce-ef135c06e1c4', max_length=64, primary_key=True, serialize=False)),
                ('dts', models.DateField(db_column='dts')),
                ('record_date', models.DateTimeField(db_column='record_date')),
                ('cowork_guid', models.CharField(db_column='cowork_guid', max_length=64)),
                ('count_hours', models.FloatField(db_column='count_hours')),
                ('cowork_state', models.IntegerField(db_column='cowork_state')),
                ('cowork_local', models.IntegerField(db_column='cowork_local')),
                ('record_fixed', models.IntegerField(db_column='record_fixed')),
                ('note', models.CharField(db_column='note', max_length=256)),
                ('is_deleted', models.IntegerField(db_column='is_deleted', default=0)),
                ('service_note', models.IntegerField(db_column='service_note', default=0)),
                ('author', models.CharField(db_column='author', max_length=128)),
                ('change_status', models.IntegerField(choices=[(0, 'изменение'), (1, 'удаление')], db_column='change_status', default=0)),
            ],
            options={
                'db_table': 'persons_coworks_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='persons_reworks_history',
            fields=[
                ('guid', models.CharField(db_column='guid', default='cfe3b589-d3b9-44fc-a279-638b2079e193', max_length=64, primary_key=True, serialize=False)),
                ('dts', models.DateField(db_column='dts')),
                ('record_date', models.DateField(db_column='[record_date]')),
                ('count_hours', models.FloatField(db_column='count_hours')),
                ('dts_audit', models.DateField(db_column='dts_audit')),
                ('is_deleted', models.IntegerField(db_column='is_deleted')),
                ('author', models.CharField(db_column='author', max_length=128)),
            ],
            options={
                'db_table': 'persons_reworks_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PositionsWhitelist',
            fields=[
                ('position_guid', models.ForeignKey(db_column='position_guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='TimeSheet.positions', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Разрешенная должность',
                'verbose_name_plural': 'Разрешенные должности',
                'db_table': 'positions_whitelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Route_sheets',
            fields=[
                ('enterprise_guid', models.ForeignKey(db_column='enterprise_guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='TimeSheet.enterprises')),
                ('fd', models.DateTimeField(db_column='fd')),
                ('td', models.DateTimeField(db_column='td')),
            ],
            options={
                'db_table': 'route_sheets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='setting_filter',
            fields=[
                ('user_id', models.IntegerField(db_column='user_id', primary_key=True, serialize=False, unique=True)),
                ('persons', models.CharField(db_column='persons', max_length=64)),
                ('enterprise', models.CharField(db_column='enterprise', max_length=64)),
                ('dts', models.DateField(db_column='dts')),
            ],
            options={
                'db_table': 'setting_filter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shift_data_f_checks',
            fields=[
                ('uid', models.CharField(db_column='uid', max_length=64, primary_key=True, serialize=False, unique=True)),
                ('link_uid', models.CharField(db_column='link_uid', max_length=64)),
                ('dd', models.DateField(db_column='dd')),
                ('dt', models.TimeField(db_column='dt')),
                ('amount', models.FloatField(db_column='amount')),
                ('cowork_state', models.IntegerField(db_column='cowork_state', default=0)),
                ('type', models.IntegerField(choices=[(0, 'корректировка факта'), (1, 'корретировка подработок/совмещений'), (2, 'корректировка ревизии')], db_column='type', default=0)),
                ('number_doc', models.IntegerField(db_column='number_doc', default=1)),
            ],
            options={
                'db_table': 'shift_data_f_checks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shift_data_f_checks_statuses',
            fields=[
                ('uid', models.CharField(db_column='uid', max_length=64, primary_key=True, serialize=False, unique=True)),
                ('dts', models.DateTimeField(db_column='dts')),
                ('comment', models.CharField(db_column='comment', max_length=512)),
            ],
            options={
                'db_table': 'shift_data_f_checks_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='shift_data_f_history',
            fields=[
                ('uid', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True)),
                ('dts', models.DateField(db_column='dts')),
                ('author', models.CharField(db_column='author', max_length=64)),
                ('f_amount', models.FloatField(db_column='f_amount')),
                ('p_suspicious', models.IntegerField(db_column='p_suspicious')),
            ],
            options={
                'db_table': 'shift_data_f_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trained_staff',
            fields=[
                ('guid', models.CharField(db_column='guid', max_length=64)),
                ('person_guid', models.ForeignKey(db_column='person_guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='TimeSheet.persons', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Обученный сотрудник',
                'verbose_name_plural': 'Обученные сотрудники',
                'db_table': 'trained_staff',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='enterprise_revision',
            options={'managed': False, 'ordering': ['-revision_date']},
        ),
        migrations.AlterModelOptions(
            name='positionsreplacement',
            options={'managed': False, 'ordering': ['position_guid_from'], 'verbose_name': 'Правило замены должности', 'verbose_name_plural': 'Правила замены должностей'},
        ),
        migrations.AlterModelOptions(
            name='settingtabletemp',
            options={'managed': False},
        ),
        migrations.AddField(
            model_name='profileuser',
            name='max_vacancy',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profileuser',
            name='otiz',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profileuser',
            name='readly_only',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profileuser',
            name='sb',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Check_relations',
            fields=[
                ('check_id_f', models.ForeignKey(db_column='check_id_f', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='check_id_f', serialize=False, to='TimeSheet.check_names')),
            ],
            options={
                'db_table': 'check_relations',
                'managed': False,
            },
        ),
    ]
